{"version":3,"sources":["constants/index.js","components/TaskItem.js","utils/index.js","components/CreateTask.js","components/D2DTasks.js","components/CategorisedTasks.js","components/SubCategoryList.js","components/StatSheet.js","components/CategoryList.js","components/WeeklyReview.js","components/Login.js","components/NavBar.js","components/FloatingTasks.js","routes.js","serviceWorker.js","index.js"],"names":["USER_TASKS_URL","TASK_CREATE_URL","TRACKER_INDEX_URL","TASK_UPDATE_URL","TaskItem","props","useState","isComplete","setIsComplete","onCompleteClass","setOnCompleteClass","userTask","task","setTask","priorityLevel","setPriorityLevel","solidifier","setSolidifier","isTaskEditing","setIsTaskEditing","isSolidifierEditing","setIsSolidifierEditing","isPriorityEditing","setIsPriorityEditing","useEffect","changeSolidifierEditMode","changePriorityEditMode","changeTaskEditMode","handleTaskEditMode","e","keyCode","handlePriorityEditMode","handleSolidifierEditMode","updatePriority","priority","target","value","axios","patch","id","then","res","data","catch","err","console","warn","updateSolidifier","log","updateTask","className","type","checked","onChange","JSON","stringify","autoFocus","onKeyDown","onDoubleClick","defaultValue","renderTasks","tasks","callback","onDataFail","Array","isArray","renderArray","map","item","Fragment","key","completed","loadRequestedTasks","request","setRequestedTasks","get","params","checkAuth","localStorage","getItem","generateCurrentDateString","currentDate","Date","pattern","date","compile","format","isSunday","getDay","CreateTask","state","setState","handleInput","preventDefault","name","validateInput","onSubmit","setTimeout","taskType","post","global","onCreate","subListId","listId","readOnly","placeholder","hidden","D2DTasks","allD2Dtasks","setAllD2DTasks","isSundayState","setIsSundayState","task_type","history","push","newTask","undefined","CategorisedTasks","associatedTasks","setAssociatedTasks","isMounted","fetchAssociatedTasks","list_id","match","SubCategoryList","list","setList","listText","setListText","handleClick","title","category_id","renderingList","filter","parseInt","onClick","renderList","StatSheet","stats","setStats","pollStats","responsePromise","Promise","resolve","reject","onStatRecievalCompareToState","getStatsPromise","incomplete_total","setInterval","grand_total","weekly_total","daily_total","incomplete_weekly_total","incomplete_daily_total","CategoryList","categories","setCategories","categoryText","setCategoryText","handleItemClick","c","WeeklyReview","review","setReview","daily_review","rows","cols","Login","email","setEmail","password","setPassword","setIsError404","auth","setItem","jwt","location","autoComplete","NavBar","to","FloatingTasks","floaters","setFloaters","Routes","defaults","headers","common","Authorization","path","component","exact","render","onlyRenderReviewRouteIfSunday","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d3127cf1.chunk.js","sourcesContent":["\nexport const DEVELOPMENT = false;\nexport const PRODUCTION = true;\n// AUTH ROUTES\nexport const LOGIN_AUTH_URL = \"https://fierce-tundra-31798.herokuapp.com/auth/login\";\nexport const USER_TASKS_URL = \"https://fierce-tundra-31798.herokuapp.com/auth/tasks\";\nexport const TASK_CREATE_URL = \"https://fierce-tundra-31798.herokuapp.com/auth/tasks\";\nexport const TRACKER_INDEX_URL = \"https://fierce-tundra-31798.herokuapp.com/auth/trackers\";\nexport const REVIEW_CREATE_URL = \"https://fierce-tundra-31798.herokuapp.com/auth/reviews\";\nexport const SUBLIST_CREATE_URL = \"https://fierce-tundra-31798.herokuapp.com/auth/sub_lists\";\nexport const CATEGORY_INDEX_URL = \"https://fierce-tundra-31798.herokuapp.com/auth/categories\";\nexport const CATEGORY_CREATE_URL = \"https://fierce-tundra-31798.herokuapp.com/auth/categories\";\nexport const TASK_UPDATE_URL = \"https://fierce-tundra-31798.herokuapp.com/auth/tasks\";\nexport const SUBLIST_GET_URL = \"https://fierce-tundra-31798.herokuapp.com/auth/user_sub_list\";\n\n// TEST LOGINS DELETE IN PRODUCTION\nexport const EMAIL_TEST_LOGIN = 'benny.purvis@hotmail.com';\nexport const PASSWORD_TEST_LOGIN = \"chicken\";\n","import React, {useState, useEffect} from 'react';\nimport {TASK_UPDATE_URL} from '../constants'\nimport axios from 'axios';\n\nconst TaskItem = (props) => {\n    const [isComplete, setIsComplete] = useState(props.isComplete);\n    const [onCompleteClass, setOnCompleteClass] = useState();\n    const [task, setTask] = useState(props.userTask);\n    const [priorityLevel, setPriorityLevel] = useState(props.priorityLevel);\n    const [solidifier, setSolidifier] = useState(props.solidifier);\n    const [isTaskEditing, setIsTaskEditing] = useState(false);\n    const [isSolidifierEditing, setIsSolidifierEditing] = useState(false);\n    const [isPriorityEditing, setIsPriorityEditing] = useState(false);\n\n    const handleCompletion = (e) => {\n        setIsComplete(!isComplete);\n        !isComplete \n        ? setOnCompleteClass(\"completed\")\n        : setOnCompleteClass('');\n\n        axios.patch(`${TASK_UPDATE_URL}/${props.id}`, {\n            \"is_complete\" : JSON.stringify(!isComplete)\n        })\n        .then((res) => {\n            console.log(res)\n        })\n        .catch(err => console.log(err))\n        console.log(isComplete);\n    }\n    \n    useEffect(() => {\n        props.isComplete\n        ? setOnCompleteClass(\"completed\")\n        : setOnCompleteClass(\"\");\n    }, [props.isComplete]);\n\n    const changeSolidifierEditMode = () => {\n      setIsSolidifierEditing(!isSolidifierEditing)\n    }\n\n    const changePriorityEditMode = () => {\n      setIsPriorityEditing(!isPriorityEditing);\n    };\n\n    const changeTaskEditMode = () => {\n      setIsTaskEditing(!isTaskEditing);\n    }\n\n    const handleTaskEditMode = (e) => {\n      if(e.keyCode === 13){\n        changeTaskEditMode();\n      }\n    }\n\n    const handlePriorityEditMode = (e) => {\n      if (e.keyCode === 13) {\n        changePriorityEditMode();\n      }\n    };\n\n    const handleSolidifierEditMode = (e) => {\n      if (e.keyCode === 13) {\n        changeSolidifierEditMode();\n      }\n    };\n\n    const updatePriority = (e) => {\n      const priority = e.target.value;\n        axios.patch(`${TASK_UPDATE_URL}/${props.id}`, {\n          priority: priority,\n        })\n        .then((res) => {\n          setPriorityLevel(res.data[\"priority_level\"]);\n        })\n        .catch((err) => console.warn(err));\n    };\n\n    const updateSolidifier = (e) => {\n        let solidifier = e.target.value;\n        console.log(solidifier);\n        axios.patch(`${TASK_UPDATE_URL}/${props.id}`, {\n          \"solidifier\" : solidifier\n        })\n        .then((res) => {\n          setSolidifier(res.data[\"solidifier\"])\n          console.log(\"SETTING THE WHY? \", res.data)\n        })\n        .catch((err) => console.warn(err));\n    }\n\n    const updateTask = (e) => {\n      let userTask = e.target.value\n        axios.patch(`${TASK_UPDATE_URL}/${props.id}`, {\n          \"task\" : userTask\n        })\n        .then((res) => {\n            setTask(res.data.task);\n          console.log(\"SETTING TASK \", res.data)\n        })\n        .catch((err) => console.warn(err))\n    }\n\n    const renderSingleTask = () => {\n      if(isTaskEditing){\n        return (\n          <input\n            type=\"text\"\n            className={`${onCompleteClass} `}\n            onChange={updateTask}\n            autoFocus\n            onKeyDown={handleTaskEditMode}\n            onDoubleClick={changeTaskEditMode}\n            defaultValue={task}\n          />\n        );\n      }else{\n        return <p className={`${onCompleteClass} item`} onDoubleClick={changeTaskEditMode}>{task}</p>\n      }\n    }\n\n    const renderSolidifier = () => {\n      if(isSolidifierEditing){\n          return (\n            <input\n              type=\"text\"\n              className={`${onCompleteClass} `}\n              onChange={updateSolidifier}\n              autoFocus\n              onKeyDown={handleSolidifierEditMode}\n              onDoubleClick={changeSolidifierEditMode}\n              defaultValue={solidifier}\n            />\n        );\n      }else{\n        return <p className={`${onCompleteClass} item`} onDoubleClick={changeSolidifierEditMode}>{solidifier}</p>\n      }\n    }\n\n    const renderPriorityLevel = () => {\n      if (isPriorityEditing) {\n        return (\n          <input\n            type=\"text\"\n            className={`${onCompleteClass}`}\n            onChange={updatePriority}\n            autoFocus\n            onKeyDown={handlePriorityEditMode}\n            onDoubleClick={changePriorityEditMode}\n            defaultValue={priorityLevel}\n          />\n        );\n      } else {\n        return (\n          <p\n            className={`${onCompleteClass}`}\n            onDoubleClick={changePriorityEditMode}\n          >\n            {priorityLevel}\n          </p>\n        );\n      }\n    };\n\n    return (\n      <div className=\"itemWrapper\">\n        <input\n          type=\"checkbox\"\n          checked={isComplete || false}\n          onChange={handleCompletion}\n          className={`${onCompleteClass} `}\n        />\n        {renderSingleTask()}\n        {renderSolidifier()}\n        {renderPriorityLevel()}\n      </div>\n    );\n}\n\nexport default TaskItem;\n","import React from \"react\";\nimport TaskItem from \"../components/TaskItem\";\nimport { USER_TASKS_URL } from \"../constants\";\nimport axios from \"axios\";\nimport date from \"date-and-time\";\n\nexport const renderTasks = (tasks, callback = onDataFail) => {\n  if (Array.isArray(tasks)) {\n    const renderArray = tasks.map((item) => {\n      return (\n        <React.Fragment key={item.id}>\n          <TaskItem\n            priorityLevel={item[\"priority_level\"]}\n            userTask={item.task}\n            solidifier={item.solidifier}\n            isComplete={item.completed}\n            id={item.id}\n            key={item.id}\n          />\n        </React.Fragment>\n      );\n    });\n    return renderArray;\n  } else {\n    callback();\n  }\n};\n\nconst onDataFail = () => {\n  console.log(\"Tasks havent been retrieved from the server yet\");\n};\n\nexport const loadRequestedTasks = (\n  request,\n  setRequestedTasks,\n  callback = null\n) => {\n  axios\n    .get(USER_TASKS_URL, {\n      params: request,\n    })\n    .then((res) => {\n      if (checkAuth()) {\n        setRequestedTasks([...res.data[\"requested_task_set\"]]);\n      }\n      if (callback) {\n        callback(res.data);\n      }\n    })\n    .catch((err) => console.warn(err));\n};\n\nexport const checkAuth = () => {\n  if (localStorage.getItem(\"jwt\") === \"null\") {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nexport const generateCurrentDateString = () => {\n  const currentDate = new Date();\n  const pattern = date.compile(\"MMM D YYYY\");\n  return date.format(currentDate, pattern);\n};\n\nexport const isSunday = () => {\n  const currentDate = new Date();\n  if (currentDate.getDay() === 4) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const setDefaultHeaders = () => {\n  axios.defaults.headers.common.Authorization = `Bearer ${localStorage.getItem(\n    \"jwt\"\n  )}`;\n};\n","import React, {useState} from 'react';\nimport {TASK_CREATE_URL} from '../constants'\nimport axios from 'axios'\n\nconst CreateTask = (props) => {\n    const [state, setState] = useState({\n        priorityLevel : 0,\n        task : '',\n        solidifier : ''\n    })\n\n    const handleInput = (e) => {\n        e.preventDefault();\n        setState({\n            ...state,\n            [e.target.name]: e.target.value\n        })\n    }\n    const validateInput = () => {\n        console.log(state);\n        if (state.priorityLevel === '' || state.solidifier === '' || state.task === ''){\n            return false\n        }else{\n            return true\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(validateInput());\n\n        setTimeout(() => {\n            if (validateInput() && props.taskType === \"D2D\") {\n                axios.post(TASK_CREATE_URL, {\n                    task: state.task,\n                    solidifier: state.solidifier,\n                    priorityLevel: state.priorityLevel,\n                    global: false,\n                })\n                .then((res) => {\n                    props.onCreate(res.data);\n                    console.log(\"POST DATA: \", res.data);\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n            }else if(validateInput() && props.taskType === \"SUBLIST\"){\n                    axios.post(TASK_CREATE_URL, {\n                        task: state.task,\n                        solidifier: state.solidifier,\n                        priorityLevel: state.priorityLevel,\n                        subListId : props.listId,\n                        global: false,\n                    })\n                    .then((res) => {\n                        props.onCreate(res.data);\n                        console.log(\"POST DATA: \", res.data);\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n            }else if(validateInput() && props.taskType === \"FLOATER\"){\n                    axios.post(TASK_CREATE_URL, {\n                    task: state.task,\n                    solidifier: state.solidifier,\n                    priorityLevel: state.priorityLevel,\n                    global: true,\n                    })\n                    .then((res) => {\n                    props.onCreate(res.data);\n                    console.log(\"POST DATA: \", res.data);\n                    })\n                    .catch((err) => {\n                    console.log(err);\n                    });\n            }\n        }, 500);\n    }\n\n    return (\n      <React.Fragment>\n        <form className=\"taskForm\" onSubmit={handleSubmit}>\n          <input type=\"checkbox\" readOnly />\n          <input name=\"task\" placeholder=\"Your task. Get it done\" type=\"text\" onChange={handleInput} />\n          <input name=\"solidifier\" placeholder=\"The solidifier. eg Get fit\" type=\"text\" onChange={handleInput} />\n          <input\n            type=\"text\"\n            name=\"priorityLevel\"\n            placeholder=\"Your priority level\"\n            onChange={handleInput}\n          />\n          <button hidden type=\"submit\"></button>\n        </form>\n      </React.Fragment>\n    );\n}\n\nexport default CreateTask;\n","import React, {useState, useEffect} from 'react';\n\nimport {renderTasks, loadRequestedTasks, isSunday} from \"../utils\"\n\nimport CreateTask from './CreateTask'\n\nconst D2DTasks = (props) => {\n    const [allD2Dtasks, setAllD2DTasks] = useState([]);\n    const [isSundayState, setIsSundayState] = useState(false);\n\n    const passCreatedTask = (newTask) => {\n        if (newTask !== undefined){\n            setAllD2DTasks([...allD2Dtasks, newTask]);\n        }\n    }\n\n    const ifSundayRedirectForReview = () => {\n        if(!isSundayState){\n            setIsSundayState(isSunday());\n        }\n        if (isSundayState){\n            props.history.push(\"/review\");\n            setIsSundayState(false)\n        }\n    }\n\n    useEffect(() => {\n        loadRequestedTasks({ task_type: \"D2D\" }, setAllD2DTasks);\n        ifSundayRedirectForReview();  \n    }, []);\n\n\n    return (\n      <React.Fragment>\n        <CreateTask onCreate={passCreatedTask} taskType=\"D2D\" />\n        {renderTasks(allD2Dtasks)}\n      </React.Fragment>\n    );\n}\n\nexport default D2DTasks;\n","import React, {useState, useEffect} from 'react';\nimport {renderTasks, loadRequestedTasks} from '../utils'\nimport {CATEGORY_INDEX_URL} from '../constants'\nimport CreateTask from \"./CreateTask\";\n\nconst CategorisedTasks = (props) => {\n    const [associatedTasks, setAssociatedTasks] = useState([]);\n    let isMounted = false;\n\n    const fetchAssociatedTasks = () => {\n        if (isMounted) {\n            loadRequestedTasks(\n            {\n                task_type: \"CATEGORISED\",\n                list_id: props.match.params.listId,\n            },\n            setAssociatedTasks\n            );\n        }\n    }\n\n    const passCreatedTask = (newTask) => {\n        if (newTask !== undefined) {\n            setAssociatedTasks([...associatedTasks, newTask]);\n        }\n    };\n\n    useEffect(() => {\n        isMounted = true   \n        fetchAssociatedTasks();\n\n        return () => {\n            isMounted = false\n        }\n    }, [])\n\n    useEffect(() => {\n        isMounted = true;\n        fetchAssociatedTasks();\n\n        return () => {\n          isMounted = false;\n        };\n    }, [props.match.params.listId])\n\n    return (\n        <div className=\"taskContainer\">\n            <CreateTask taskType=\"SUBLIST\" listId={props.match.params.listId} onCreate={passCreatedTask}/>\n            {renderTasks(associatedTasks)}\n        </div>\n    );\n}\n\nexport default CategorisedTasks;\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {SUBLIST_GET_URL, SUBLIST_CREATE_URL} from '../constants'\n\nconst SubCategoryList = (props) => {\n    const [list, setList] = useState([]);\n    const [listText, setListText] = useState([]);\n\n    const fetchSubList = () => {\n        axios.get(SUBLIST_GET_URL)\n        .then((res) => {\n            console.log(res.data);\n            setList(res.data[\"sub_list\"]);\n        })\n        .catch((err) => {\n            console.warn(err);\n        });\n    }\n\n    useEffect(() => {\n        fetchSubList();\n    }, []);\n\n    const handleClick = (e) => {\n        props.history.push(`/category_sub_list/${props.match.params[\"category_id\"]}/${e.target.id}`)\n    }\n\n    const renderList = () => {\n        const renderingList = list.filter((item) => {\n            console.log(item)\n            return parseInt(item[\"category_id\"]) === parseInt(props.match.params.category_id);\n        })\n        console.log(renderingList);\n        return renderingList.map((item) => {\n          return (\n            <li onClick={handleClick} key={item.id} id={item.id}>\n              {item.title}\n            </li>\n          );\n        });\n    };\n\n    const submitList = (e) => {\n        if(e.keyCode === 13){\n            axios.post(SUBLIST_CREATE_URL, {\n                title: listText,\n                category_id: props.match.params[\"category_id\"]\n            })\n            .then(res => {\n                setList([...list, res.data])\n            })\n            .catch(err => {\n                console.warn(err);\n            })\n        }\n    }\n\n    return (\n      <div className=\"sublistWrapper\">\n        <h3>Your lists</h3>\n        <ul>\n          <li>\n            <input\n                type=\"text\"\n                onKeyDown={submitList}\n                onChange={(e) => setListText(e.target.value)}\n                placeholder=\"Create a list\"\n            />\n          </li>\n          {renderList()}\n        </ul>\n      </div>\n    );\n}\n\nexport default SubCategoryList;\n","import React, {useState, useEffect} from 'react';\nimport { TRACKER_INDEX_URL } from \"../constants\";\nimport axios from 'axios';\n\nconst StatSheet = (props) => {\n    const [stats, setStats] = useState({});\n\n    const fetchStats = () => {\n        return axios.get(TRACKER_INDEX_URL)\n        .then((res) => {\n            setStats(res.data);\n        })\n        .catch((err) => {\n            console.warn(err);\n        });\n    }\n\n    const pollStats = () => {\n        const responsePromise = new Promise((resolve, reject) => {\n            axios.get(TRACKER_INDEX_URL)\n            .then((res) => {\n                console.log(res.data);\n                resolve(res.data);\n            })\n            .catch((err) => {\n                reject(err);\n            });\n        });\n        \n        onStatRecievalCompareToState(responsePromise)\n    }\n\n    const onStatRecievalCompareToState = (getStatsPromise) => {\n        getStatsPromise.then((data) => {\n            \n            if (data[\"incomplete_total\"] !== stats.incomplete_total) {\n                setStats(data);\n            }\n        })\n        .catch((err) => {\n            console.warn(err);\n        });\n    }\n\n    const displayStats = () => {\n        return (\n          <ul>\n            <li>\n              <strong>Grand Completed Total: </strong>\n              {stats.grand_total}\n            </li>\n            <li>\n              <strong>Weekly Completed Total: </strong>\n              {stats.weekly_total}\n            </li>\n            <li>\n              <strong>Daily Completed Total: </strong>\n              {stats.daily_total}\n            </li>\n            <li>\n              <strong>Grand Incomplete Total: </strong>\n              {stats.incomplete_total}\n            </li>\n            <li>\n              <strong>Weekly Incomplete Total: </strong>\n              {stats.incomplete_weekly_total}\n            </li>\n            <li>\n              <strong>Daily Incomplete Total: </strong>\n              {stats.incomplete_daily_total}\n            </li>\n          </ul>\n        );\n    }\n\n    useEffect(() => {\n        fetchStats();\n        setInterval(pollStats, 3000);\n    }, [])\n    return (\n        <React.Fragment>\n            {displayStats()}\n        </React.Fragment>\n    );\n}\n\nexport default StatSheet;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { CATEGORY_INDEX_URL, CATEGORY_CREATE_URL } from \"../constants\";\n\nconst CategoryList = (props) => {\n  const [categories, setCategories] = useState([]);\n  const [categoryText, setCategoryText] = useState(\"\");\n\n  const fetchCategories = () => {\n    axios\n      .get(CATEGORY_INDEX_URL)\n      .then((res) => {\n        setCategories(res.data[\"user_categories\"]);\n        console.log(res.data);\n      })\n      .catch((err) => {\n        console.warn(err);\n      });\n  };\n\n  const handleItemClick = (e) => {\n    props.history.push(`/category_sub_list/${e.target.id}`);\n  };\n\n  const renderList = () => {\n    if (Array.isArray(categories)) {\n      return categories.map((c) => {\n        return (\n          <li onClick={handleItemClick} id={c.id} key={c.id}>\n            {c.title}\n          </li>\n        );\n      });\n    }\n  };\n  const submitCategory = (e) => {\n    if (e.keyCode === 13) {\n      axios\n        .post(CATEGORY_CREATE_URL, {\n          title: categoryText,\n        })\n        .then((res) => {\n          setCategories([...categories, res.data]);\n        });\n    }\n  };\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n  return (\n    <div className=\"categoryList\">\n      <h3>Categories</h3>\n      <ul>\n        <li>\n          <input\n            type=\"text\"\n            onKeyDown={submitCategory}\n            onChange={(e) => setCategoryText(e.target.value)}\n            placeholder=\"Create a category\"\n          />\n        </li>\n        {renderList()}\n      </ul>\n    </div>\n  );\n};\n\nexport default CategoryList;\n","import React, { useState } from \"react\";\nimport { REVIEW_CREATE_URL } from \"../constants\";\nimport axios from \"axios\";\n\nconst WeeklyReview = (props) => {\n  const [review, setReview] = useState(\"\");\n\n  const handleTextArea = (e) => {\n    e.preventDefault();\n    setReview(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    axios\n      .post(REVIEW_CREATE_URL, {\n        daily_review: review,\n      })\n      .then((res) => {\n        console.log(res);\n        props.history.push(\"/D2D\");\n      })\n      .catch((err) => console.warn(err));\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <textarea name=\"review\" rows=\"8\" cols=\"60\" onChange={handleTextArea} />\n        <button type=\"submit\">Submit Review!</button>\n      </form>\n    </div>\n  );\n};\n\nexport default WeeklyReview;\n","import React, {useState, useEffect} from 'react';\nimport {LOGIN_AUTH_URL, EMAIL_TEST_LOGIN, PASSWORD_TEST_LOGIN} from '../constants'\nimport axios from 'axios';\n\nconst Login = (props) => {\n    const [email, setEmail] = useState(EMAIL_TEST_LOGIN);\n    const [password, setPassword] = useState(PASSWORD_TEST_LOGIN);\n    const [isError404, setIsError404] = useState(false);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const request = {\n            auth : {\n                email : email,\n                password : password\n            }\n        }\n        console.log(password);\n        axios.post(LOGIN_AUTH_URL, request)\n        .then(res => {\n            console.log(res.data);\n            localStorage.setItem(\"jwt\", res.data.jwt)\n            console.log(props.history.location);\n            props.history.push(\"/D2D\", {\n              params : localStorage.getItem(\"jwt\")\n            });\n        })\n        .catch(err => {\n            setIsError404(true)\n            console.warn(err);\n        });\n\n        console.log(localStorage.getItem('jwt'));\n    }\n    \n    return (\n      <div>\n        <h2>Login</h2>\n        <form onSubmit={handleSubmit}>\n          <label>Email:</label>\n          <input\n            type=\"text\"\n            onChange={(e) => setEmail(e.target.value)}\n            autoComplete=\"on\"\n            value={email}\n          />\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n            autoComplete=\"on\"\n          />\n          <button>Login</button>\n        </form>\n      </div>\n    );\n}\n\nexport default Login;\n","import React from 'react';\nimport {Link} from 'react-router-dom'\n\nconst NavBar = () => {\n\n    const logout = () => {\n        localStorage.setItem('jwt', \"null\");\n    }\n\n    return (\n      <nav className=\"topLevelNav\">\n        <Link to=\"/D2D\" className=\"D2DNav navItem\">\n            Day 2 Day\n        </Link>\n        <Link onClick={logout} to=\"/login\" className=\"logout navItem\">\n          Logout\n        </Link>\n        <Link to=\"/floaters\" className=\"floatingTasksNav navItem\">\n          Floating Tasks\n        </Link>\n      </nav>\n    );\n}\n\nexport default NavBar;\n","import React, {useEffect, useState} from 'react';\nimport CreateTask from \"./CreateTask\";\nimport {renderTasks, loadRequestedTasks} from '../utils'\n\nconst FloatingTasks = () => {\n    const [floaters, setFloaters] = useState([]);\n\n    useEffect(() => {\n        loadRequestedTasks({\n            task_type : \"FLOATERS\"\n        }, setFloaters);\n    }, []);\n\n    const passCreatedTask = (newTask) => {\n        if (newTask !== undefined) {\n            setFloaters([...floaters, newTask]);\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <CreateTask taskType=\"FLOATER\" onCreate={passCreatedTask}/>\n            {renderTasks(floaters)}\n        </React.Fragment>\n    );\n}\n\nexport default FloatingTasks;\n","import React from \"react\";\nimport D2DTasks from \"./components/D2DTasks\";\nimport CategorisedTasks from \"./components/CategorisedTasks\";\nimport SubCategoryList from \"./components/SubCategoryList\";\nimport StatSheet from \"./components/StatSheet\";\nimport CategoryList from \"./components/CategoryList\";\nimport WeeklyReview from \"./components/WeeklyReview\";\nimport {\n  checkAuth,\n  generateCurrentDateString,\n  isSunday,\n  setDefaultHeaders,\n} from \"./utils\";\nimport Login from \"./components/Login\";\nimport axios from \"axios\";\nimport NavBar from \"./components/NavBar\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport FloatingTasks from \"./components/FloatingTasks\";\n\nconst Routes = () => {\n  const onlyRenderReviewRouteIfSunday = () => {\n    if (isSunday()) {\n      return (\n        <Route\n          exact\n          path=\"/review\"\n          render={(props) => {\n            if (!checkAuth) {\n              props.history.push(\"/login\");\n            } else {\n              return (\n                <div>\n                  <WeeklyReview {...props} />\n                </div>\n              );\n            }\n          }}\n        />\n      );\n    }\n  };\n  setDefaultHeaders();\n  return (\n    <Router>\n      <div>\n        <Route path=\"/\" component={NavBar} />\n        {onlyRenderReviewRouteIfSunday()}\n        <Route\n          path=\"/D2D\"\n          render={(props) => {\n            if (!checkAuth()) {\n              props.history.push(\"/login\");\n            } else {\n              return (\n                <div className=\"statSheet\">\n                  <StatSheet {...props} />\n                </div>\n              );\n            }\n          }}\n        />\n        <Route\n          exact\n          path=\"/floaters\"\n          render={(props) => {\n            if (!checkAuth()) {\n              props.history.push(\"/login\");\n            } else {\n              return (\n                <div className=\"contentWrapper\">\n                  <div className=\"taskContainer\">\n                    <FloatingTasks {...props} />\n                  </div>\n                  <div className=\"listWrapper\">\n                    <CategoryList {...props} />\n                  </div>\n                </div>\n              );\n            }\n          }}\n        />\n        <Route\n          exact\n          path=\"/D2D\"\n          render={(props) => {\n            if (!checkAuth()) {\n              props.history.push(\"/login\");\n            } else {\n              return (\n                <div className=\"contentWrapper\">\n                  <h3 id=\"currentDate\">{generateCurrentDateString()}</h3>\n                  <div className=\"taskContainer\">\n                    <D2DTasks {...props} />\n                  </div>\n                  <div className=\"listWrapper\">\n                    <CategoryList {...props} />\n                  </div>\n                </div>\n              );\n            }\n          }}\n        />\n        <Route\n          exact\n          path=\"/category_sub_list/:category_id\"\n          render={(props) => {\n            if (!checkAuth()) {\n              props.history.push(\"/login\");\n            } else {\n              return (\n                <div className=\"contentWrapper\">\n                  <h3 id=\"currentDate\">{generateCurrentDateString()}</h3>\n                  <div className=\"taskContainer\">\n                    <D2DTasks {...props} />\n                  </div>\n                  <div className=\"listWrapper\">\n                    <CategoryList {...props} />\n                    <SubCategoryList {...props} />\n                  </div>\n                </div>\n              );\n            }\n          }}\n        />\n        <Route\n          exact\n          path=\"/category_sub_list/:category_id/:listId\"\n          render={(props) => {\n            if (!checkAuth()) {\n              props.history.push(\"/login\");\n            } else {\n              return (\n                <div>\n                  <div className=\"contentWrapper\">\n                    <div id=\"spacer\"></div>\n                    <div className=\"taskContainer\">\n                      <CategorisedTasks {...props} />\n                    </div>\n                    <div className=\"listWrapper\">\n                      <CategoryList {...props} />\n                      <SubCategoryList {...props} />\n                    </div>\n                  </div>\n                </div>\n              );\n            }\n          }}\n        />\n        <Route exact path=\"/categorised/:listId\" component={CategorisedTasks} />\n        <Route exact path=\"/login\" component={Login} />\n      </div>\n    </Router>\n  );\n};\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css'\nimport Routes from './routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}